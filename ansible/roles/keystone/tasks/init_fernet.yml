---
- name: Waiting for Keystone SSH port to be UP
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ keystone_ssh_port }}"
    connect_timeout: 1
  register: check_keystone_ssh_port
  until: check_keystone_ssh_port is success
  retries: 10
  delay: 5

- name: Initialise fernet key authentication
  command: "docker exec -t keystone_fernet kolla_keystone_bootstrap {{ keystone_username }} {{ keystone_groupname }}"
  register: fernet_create
  changed_when: fernet_create.stdout.find('localhost | SUCCESS => ') != -1 and (fernet_create.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed
  until: fernet_create.stdout.split()[2] == 'SUCCESS' or fernet_create.stdout.find('Key repository is already initialized') != -1
  retries: 10
  delay: 5
  run_once: True
  delegate_to: "{{ groups[keystone_services['keystone-fernet'].group][0] }}"
  when: not use_preconfigured_fernet | bool

- name: Run key distribution
  command: docker exec -t keystone_fernet /usr/bin/fernet-rotate.sh
  run_once: True
  delegate_to: "{{ groups[keystone_services['keystone-fernet'].group][0] }}"
  when: not use_preconfigured_fernet | bool

- name: Copy preconfigured keys
  become: True
  vars:
    keystone_fernet: "{{ keystone_services['keystone-fernet'] }}"
  docker_container:
    auto_remove: True
    detach: False
    image: "{{ keystone_fernet.image }}"
    name: "keystone_fernet_preconfigure"
    command: "cp -r /etc/keystone/fernet-keys-preconfigured/* /etc/keystone/fernet-keys/"
    volumes_from:
      - "{{ keystone_fernet.container_name }}"
    volumes:
      - "/etc/keystone/fernet-keys:/etc/keystone/fernet-keys-preconfigured:ro"
  run_once: True
  delegate_to: "{{ groups[keystone_fernet.group][0] }}"
  when: use_preconfigured_fernet | bool
